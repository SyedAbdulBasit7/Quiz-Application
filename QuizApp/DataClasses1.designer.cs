#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuizApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quiz")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void Insertquiz_category(quiz_category instance);
    partial void Updatequiz_category(quiz_category instance);
    partial void Deletequiz_category(quiz_category instance);
    partial void Insertquiz_question(quiz_question instance);
    partial void Updatequiz_question(quiz_question instance);
    partial void Deletequiz_question(quiz_question instance);
    partial void Insertresult(result instance);
    partial void Updateresult(result instance);
    partial void Deleteresult(result instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QuizApp.Properties.Settings.Default.QuizConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<quiz_category> quiz_categories
		{
			get
			{
				return this.GetTable<quiz_category>();
			}
		}
		
		public System.Data.Linq.Table<quiz_question> quiz_questions
		{
			get
			{
				return this.GetTable<quiz_question>();
			}
		}
		
		public System.Data.Linq.Table<result> results
		{
			get
			{
				return this.GetTable<result>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _username;
		
		private string _email;
		
		private string _password;
		
		private EntitySet<result> _results;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public User()
		{
			this._results = new EntitySet<result>(new Action<result>(this.attach_results), new Action<result>(this.detach_results));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_result", Storage="_results", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<result> results
		{
			get
			{
				return this._results;
			}
			set
			{
				this._results.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_results(result entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_results(result entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quiz_category")]
	public partial class quiz_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _category_id;
		
		private string _category_name;
		
		private EntitySet<quiz_question> _quiz_questions;
		
		private EntitySet<result> _results;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(string value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    #endregion
		
		public quiz_category()
		{
			this._quiz_questions = new EntitySet<quiz_question>(new Action<quiz_question>(this.attach_quiz_questions), new Action<quiz_question>(this.detach_quiz_questions));
			this._results = new EntitySet<result>(new Action<result>(this.attach_results), new Action<result>(this.detach_results));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(50)")]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quiz_category_quiz_question", Storage="_quiz_questions", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<quiz_question> quiz_questions
		{
			get
			{
				return this._quiz_questions;
			}
			set
			{
				this._quiz_questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quiz_category_result", Storage="_results", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<result> results
		{
			get
			{
				return this._results;
			}
			set
			{
				this._results.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_quiz_questions(quiz_question entity)
		{
			this.SendPropertyChanging();
			entity.quiz_category = this;
		}
		
		private void detach_quiz_questions(quiz_question entity)
		{
			this.SendPropertyChanging();
			entity.quiz_category = null;
		}
		
		private void attach_results(result entity)
		{
			this.SendPropertyChanging();
			entity.quiz_category = this;
		}
		
		private void detach_results(result entity)
		{
			this.SendPropertyChanging();
			entity.quiz_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quiz_question")]
	public partial class quiz_question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _question_id;
		
		private string _question;
		
		private string _choices;
		
		private string _answer;
		
		private string _category_id;
		
		private EntityRef<quiz_question> _quiz_question2;
		
		private EntityRef<quiz_category> _quiz_category;
		
		private EntityRef<quiz_question> _quiz_question1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onquestion_idChanging(string value);
    partial void Onquestion_idChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnchoicesChanging(string value);
    partial void OnchoicesChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    partial void Oncategory_idChanging(string value);
    partial void Oncategory_idChanged();
    #endregion
		
		public quiz_question()
		{
			this._quiz_question2 = default(EntityRef<quiz_question>);
			this._quiz_category = default(EntityRef<quiz_category>);
			this._quiz_question1 = default(EntityRef<quiz_question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string question_id
		{
			get
			{
				return this._question_id;
			}
			set
			{
				if ((this._question_id != value))
				{
					if (this._quiz_question1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onquestion_idChanging(value);
					this.SendPropertyChanging();
					this._question_id = value;
					this.SendPropertyChanged("question_id");
					this.Onquestion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(MAX)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_choices", DbType="NVarChar(50)")]
		public string choices
		{
			get
			{
				return this._choices;
			}
			set
			{
				if ((this._choices != value))
				{
					this.OnchoicesChanging(value);
					this.SendPropertyChanging();
					this._choices = value;
					this.SendPropertyChanged("choices");
					this.OnchoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NVarChar(50)")]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="NVarChar(10)")]
		public string category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._quiz_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quiz_question_quiz_question", Storage="_quiz_question2", ThisKey="question_id", OtherKey="question_id", IsUnique=true, IsForeignKey=false)]
		public quiz_question quiz_question2
		{
			get
			{
				return this._quiz_question2.Entity;
			}
			set
			{
				quiz_question previousValue = this._quiz_question2.Entity;
				if (((previousValue != value) 
							|| (this._quiz_question2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quiz_question2.Entity = null;
						previousValue.quiz_question1 = null;
					}
					this._quiz_question2.Entity = value;
					if ((value != null))
					{
						value.quiz_question1 = this;
					}
					this.SendPropertyChanged("quiz_question2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quiz_category_quiz_question", Storage="_quiz_category", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true)]
		public quiz_category quiz_category
		{
			get
			{
				return this._quiz_category.Entity;
			}
			set
			{
				quiz_category previousValue = this._quiz_category.Entity;
				if (((previousValue != value) 
							|| (this._quiz_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quiz_category.Entity = null;
						previousValue.quiz_questions.Remove(this);
					}
					this._quiz_category.Entity = value;
					if ((value != null))
					{
						value.quiz_questions.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(string);
					}
					this.SendPropertyChanged("quiz_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quiz_question_quiz_question", Storage="_quiz_question1", ThisKey="question_id", OtherKey="question_id", IsForeignKey=true)]
		public quiz_question quiz_question1
		{
			get
			{
				return this._quiz_question1.Entity;
			}
			set
			{
				quiz_question previousValue = this._quiz_question1.Entity;
				if (((previousValue != value) 
							|| (this._quiz_question1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quiz_question1.Entity = null;
						previousValue.quiz_question2 = null;
					}
					this._quiz_question1.Entity = value;
					if ((value != null))
					{
						value.quiz_question2 = this;
						this._question_id = value.question_id;
					}
					else
					{
						this._question_id = default(string);
					}
					this.SendPropertyChanged("quiz_question1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.result")]
	public partial class result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _result_id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _score;
		
		private string _category_id;
		
		private EntityRef<quiz_category> _quiz_category;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onresult_idChanging(string value);
    partial void Onresult_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnscoreChanging(System.Nullable<int> value);
    partial void OnscoreChanged();
    partial void Oncategory_idChanging(string value);
    partial void Oncategory_idChanged();
    #endregion
		
		public result()
		{
			this._quiz_category = default(EntityRef<quiz_category>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result_id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string result_id
		{
			get
			{
				return this._result_id;
			}
			set
			{
				if ((this._result_id != value))
				{
					this.Onresult_idChanging(value);
					this.SendPropertyChanging();
					this._result_id = value;
					this.SendPropertyChanged("result_id");
					this.Onresult_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_score", DbType="Int")]
		public System.Nullable<int> score
		{
			get
			{
				return this._score;
			}
			set
			{
				if ((this._score != value))
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="NVarChar(10)")]
		public string category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._quiz_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quiz_category_result", Storage="_quiz_category", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true)]
		public quiz_category quiz_category
		{
			get
			{
				return this._quiz_category.Entity;
			}
			set
			{
				quiz_category previousValue = this._quiz_category.Entity;
				if (((previousValue != value) 
							|| (this._quiz_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quiz_category.Entity = null;
						previousValue.results.Remove(this);
					}
					this._quiz_category.Entity = value;
					if ((value != null))
					{
						value.results.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(string);
					}
					this.SendPropertyChanged("quiz_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_result", Storage="_User", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.results.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.results.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
